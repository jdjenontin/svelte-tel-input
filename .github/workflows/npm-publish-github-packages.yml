name: CI and Publish to GitLab Registry

on:
  push:
    branches:
      - main   # Trigger when changes are pushed to the 'main' branch
  pull_request:
    branches:
      - main   # Trigger on PRs to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Node version as per your package.json engines field

      - name: Set up pnpm
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      - name: Build the package
        run: |
          pnpm build:apps  # Or whatever build command fits your package setup
          
      - name: Run tests
        run: pnpm test  # Make sure tests are passing before publishing

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up pnpm
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      - name: Publish to GitLab Registry
        env:
          CI_REGISTRY: ${{ secrets.GITLAB_REGISTRY_URL }}  # Set up this secret in GitHub
          CI_REGISTRY_USER: ${{ secrets.GITLAB_USERNAME }}  # Set up this secret in GitHub
          CI_REGISTRY_PASSWORD: ${{ secrets.GITLAB_TOKEN }}  # Set up this secret in GitHub
        run: |
          # Login to GitLab registry using GitLab credentials
          echo "//${CI_REGISTRY}/:_authToken=${CI_REGISTRY_PASSWORD}" > ~/.npmrc

          # Publish the package to the GitLab Registry (npm or GitLab registry)
          pnpm publish --registry $CI_REGISTRY --access public  # Adjust the access level and registry if needed
          
          # Alternatively, you can use GitLab's Docker registry, which would involve a different command
          # docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
          # docker push $CI_REGISTRY/your-image
          
